{
	"info": {
		"_postman_id": "b5b8fa94-5aee-4101-8dc9-a850467763f1",
		"name": "Customers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"token\", jsonData.token);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"salman\",\r\n    \"password\":\"salman1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/customer/api/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "WrongAttemptForLogin_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Wrong Attempt For Login\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Username or password incorrect\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"salma\",\r\n    \"password\":\"salman1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/customer/api/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "WrongAttemptForLogin_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Wrong Attempt For Login\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Username or password incorrect\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"salman\",\r\n    \"password\":\"salman123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/customer/api/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "WrongAttemptForLogin_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Wrong Attempt For Login\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Username or password incorrect\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"salma\",\r\n    \"password\":\"salman123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/customer/api/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "WrongAttemptForLogin_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Wrong Attempt For Login\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Username or password incorrect\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"\",\r\n    \"password\":\"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/customer/api/v1/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Fetch customer list\", ()=> {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Customers[0].id).to.eql(101);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/customer/api/v1/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Search customer\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(102);\r",
							"  \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/customer/api/v1/get/102",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"get",
						"102"
					]
				}
			},
			"response": []
		},
		{
			"name": "Wrong Customer Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Wrong Customer Search\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Customer info not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/customer/api/v1/get/100",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"get",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = _.random(1000, 9999);\r",
							"pm.environment.set(\"id\", id);\r",
							"\r",
							"// const reqObject = {\r",
							"//   url: 'https://randomuser.me/api/',\r",
							"//   method: 'GET',\r",
							"//   header: 'Content-Type:application/json'\r",
							"// };\r",
							"\r",
							"// pm.sendRequest(reqObject, (err, res) => {\r",
							"//     let {results} = res.json()\r",
							"//     let name=results[0].name.first+\" \"+results[0].name.last;\r",
							"//     let email=results[0].email;\r",
							"//     let phone_number=results[0].phone;\r",
							"//     let address=results[0].location.city+\",\"+results[0].location.country\r",
							"\r",
							"\r",
							"//     pm.environment.set(\"name\", name);\r",
							"//     pm.environment.set(\"email\", email);\r",
							"//     pm.environment.set(\"phone_number\", phone_number);\r",
							"//     pm.environment.set(\"address\", address);\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Check status\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Success\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":{{id}},\r\n    \"name\":\"{{$randomFullName}}\", \r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"address\":\"{{$randomStreetAddress}}\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/customer/api/v1/create",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Existing Customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":{{id}},\r\n    \"name\":\"{{$randomFullName}}\", \r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"address\":\"{{$randomStreetAddress}}\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/customer/api/v1/create",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update customer\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Customers.address).includes(\"Mirpur\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 102,\r\n    \"name\": \"Mr. Jamal Islam\",\r\n    \"email\": \"mrjamal@test.com\",\r\n    \"address\": \"Mirpur,Dhaka\",\r\n    \"phone_number\": \"01502020110\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/customer/api/v1/update/102",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"update",
						"102"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if customer is deleted\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Customer deleted!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/customer/api/v1/delete/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"delete",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deleted Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Already Customer Deleted\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Customer not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/customer/api/v1/delete/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"delete",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://customer-test-api.herokuapp.com"
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		}
	]
}